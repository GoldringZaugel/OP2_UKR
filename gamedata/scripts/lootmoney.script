function lootmoney(npc)
--if monnoroch_options.mone == 0 then return end
	if npc ~= nil and not string.find(npc:section(),"arena") and npc:character_community()~="arena_enemy" and npc:character_community()~="vermaht" and db.actor:has_info("haker_soft_pda") and npc:object("device_pda_npc") then
		local money = npc:money()

		if money ~= nil and money ~=0 then
			local deadmoney = money

			if monnoroch_options.money_real == 1 then
                local npc_rank
				npc_rank = ranks.get_obj_rank_name(npc)

				if npc_rank ~= nil then
					if npc_rank == "novice" and deadmoney >=150 then deadmoney=math.random(100,150)    
					elseif npc_rank == "experienced" and deadmoney >=300 then deadmoney=math.random(200,300)  
					elseif npc_rank == "veteran" and deadmoney >=450 then deadmoney=math.random(380,450) 
					elseif npc_rank == "master" and deadmoney >=600 then deadmoney=math.random(500,600)  
                    end
				end
			end

			local news_texti = "\\n%c[255,255,0,0]Мертвий сталкер: %c[default]"..npc:character_name().."\\n%c[255,255,0,0]Знайдено грошей на рахунку: %c[default]"..game.translate_string(tostring(deadmoney).."грн.")
			db.actor:give_game_news(news_texti, "ui\\ui_iconsTotal", Frect():set(0,0,83,47), 1, 4000)
			db.actor:give_money(deadmoney)
			game_stats.money_quest_update(deadmoney) 
			npc:give_money(-money)
			archievements.acv_count_event("acv_mar", 50000, "Мародер", deadmoney)
		end
	end

	-- автообыск трупа
	if ui_mm_opt_main.GetOption("autograb_body") then
		start_transfer_all_desired(npc)
	end
end
	
-- автообыск трупа. список переносимых предметов. поиск по частичному совпадению.
local favorites = {
	"ammo",
	"grenade",
	"medkit",
--	"bandage",
	"antirad",
	"suvorotka",
	"vodka"
}

local out_object = nil
local time_to_move = nil

function start_transfer_all_desired(npc)
	out_object = npc
	time_to_move = time_global()+500
end

function transfer_all_desired()
	if time_to_move and time_to_move < time_global() then
		if has_alife_info("ui_car_body") then
			db.actor:give_info_portion("biznes_remove_special_item")
			out_object:inventory_for_each(transfer_favorite)
			db.actor:disable_info_portion("biznes_remove_special_item")
		end
		
		out_object = nil
		time_to_move = nil
	end
end

function transfer_favorite(item)
	for k,v in pairs(favorites) do
		if string.find(item:section(), v) then
			out_object:transfer_item(item, db.actor)
		end
	end
end
